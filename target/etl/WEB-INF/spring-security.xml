<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
   http://www.springframework.org/schema/security
   http://www.springframework.org/schema/security/spring-security-3.0.xsd">

	<security:global-method-security
		secured-annotations="enabled" />

	<security:http auto-config="true" use-expressions="true"
		access-denied-page="/access_denied" disable-url-rewriting="true">

		<!-- Grant access for these pages -->
		<security:intercept-url pattern="/login"
			access="permitAll" />
		<security:intercept-url pattern="/logout"
			access="permitAll" />
		<security:intercept-url pattern="/access_denied"
			access="permitAll" />
		<security:intercept-url pattern="/login_failed"
			access="permitAll" />

		<!-- Block access to other webpages -->
		<security:intercept-url pattern="/home"
			access="hasAnyRole('ROLE_AJOUTER_CONNEXION_BASE_DONNEES', 'ROLE_MODIFIER_CONNEXION_BASE_DONNEES', 'ROLE_SUPPRIMER_CONNEXION_BASE_DONNEES', 'ROLE_AJOUTER_CONNEXION_FTP', 'ROLE_MODIFIER_CONNEXION_FTP', 'ROLE_SUPPRIMER_CONNEXION_FTP', 'ROLE_GESTION_FICHIER_LOCAL', 'ROLE_GESTION_FICHIERS_FTP', 'ROLE_AJOUTER_CONFIGURATION', 'ROLE_MODIFIER_CONFIGURATION', 'ROLE_SUPPRIMER_CONFIGURATION', 'ROLE_AJOUTER_STRUCTURE_DONNEES', 'ROLE_MODIFIER_STRUCTURE_DONNEES', 'ROLE_SUPPRIMER_STRUCTURE_DONNEES', 'ROLE_VERIFIER_FICHIER_CSV', 'ROLE_IMPORTER_FICHER_CSV', 'ROLE_AJOUTER_UTILISATEUR', 'ROLE_MODIFIER_UTILISATEUR', 'ROLE_SUPPRIMER_UTILISATEUR')" />
		<security:intercept-url pattern="/connection_list"
			access="hasAnyRole('ROLE_AJOUTER_CONNEXION_BASE_DONNEES', 'ROLE_MODIFIER_CONNEXION_BASE_DONNEES', 'ROLE_SUPPRIMER_CONNEXION_BASE_DONNEES')" />
		<security:intercept-url pattern="/connection_add"
			access="hasAnyRole('ROLE_AJOUTER_CONNEXION_BASE_DONNEES')" />
		<security:intercept-url pattern="/connection_edit"
			access="hasAnyRole('ROLE_MODIFIER_CONNEXION_BASE_DONNEES')" />
		<security:intercept-url pattern="/db_delete"
			access="hasAnyRole('ROLE_SUPPRIMER_CONNEXION_BASE_DONNEES')" />
		<security:intercept-url pattern="/ftp_list"
			access="hasAnyRole('ROLE_AJOUTER_CONNEXION_FTP', 'ROLE_MODIFIER_CONNEXION_FTP', 'ROLE_SUPPRIMER_CONNEXION_FTP')" />
		<security:intercept-url pattern="/ftp_add"
			access="hasAnyRole('ROLE_AJOUTER_CONNEXION_FTP')" />
		<security:intercept-url pattern="/ftp_edit"
			access="hasAnyRole('ROLE_MODIFIER_CONNEXION_FTP')" />
		<security:intercept-url pattern="/ftp_delete"
			access="hasAnyRole('ROLE_SUPPRIMER_CONNEXION_FTP')" />
		<security:intercept-url pattern="/upload_local"
			access="hasAnyRole('ROLE_GESTION_FICHIER_LOCAL')" />
		<security:intercept-url pattern="/upload_ftp"
			access="hasAnyRole('ROLE_GESTION_FICHIERS_FTP')" />
		<security:intercept-url pattern="/configuration_list"
			access="hasAnyRole('ROLE_AJOUTER_CONFIGURATION', 'ROLE_MODIFIER_CONFIGURATION', 'ROLE_SUPPRIMER_CONFIGURATION')" />
		<security:intercept-url pattern="/config_details"
			access="hasAnyRole('ROLE_AJOUTER_CONFIGURATION', 'ROLE_MODIFIER_CONFIGURATION', 'ROLE_SUPPRIMER_CONFIGURATION')" />
		<security:intercept-url pattern="/configuration_add"
			access="hasAnyRole('ROLE_AJOUTER_CONFIGURATION')" />
		<security:intercept-url pattern="/config_edit"
			access="hasAnyRole('ROLE_MODIFIER_CONFIGURATION')" />
		<security:intercept-url pattern="/config_delete"
			access="hasAnyRole('ROLE_SUPPRIMER_CONFIGURATION')" />
		<security:intercept-url pattern="/data_structure_list"
			access="hasAnyRole('ROLE_AJOUTER_STRUCTURE_DONNEES', 'ROLE_MODIFIER_STRUCTURE_DONNEES', 'ROLE_SUPPRIMER_STRUCTURE_DONNEES')" />
		<security:intercept-url pattern="data_structure_details"
			access="hasAnyRole('ROLE_AJOUTER_STRUCTURE_DONNEES', 'ROLE_MODIFIER_STRUCTURE_DONNEES', 'ROLE_SUPPRIMER_STRUCTURE_DONNEES')" />
		<security:intercept-url pattern="/data_structure_add"
			access="hasAnyRole('ROLE_AJOUTER_STRUCTURE_DONNEES')" />
		<security:intercept-url pattern="/data_structure_edit"
			access="hasAnyRole('ROLE_MODIFIER_STRUCTURE_DONNEES')" />
		<security:intercept-url pattern="/data_structure_delete"
			access="hasAnyRole('ROLE_SUPPRIMER_STRUCTURE_DONNEES')" />
		<security:intercept-url pattern="/verification"
			access="hasAnyRole('ROLE_VERIFIER_FICHIER_CSV')" />
		<security:intercept-url pattern="/importation"
			access="hasAnyRole('ROLE_IMPORTER_FICHER_CSV')" />
		<security:intercept-url pattern="/user_right_list"
			access="hasAnyRole('ROLE_AJOUTER_DROIT', 'ROLE_MODIFIER_DROIT', 'ROLE_SUPPRIMER_DROIT')" />
		<security:intercept-url pattern="/user_right_details"
			access="hasAnyRole('ROLE_AJOUTER_DROIT', 'ROLE_MODIFIER_DROIT', 'ROLE_SUPPRIMER_DROIT')" />
		<security:intercept-url pattern="/user_right_add"
			access="hasAnyRole('ROLE_AJOUTER_DROIT')" />
		<security:intercept-url pattern="/user_right_edit"
			access="hasAnyRole('ROLE_MODIFIER_DROIT')" />
		<security:intercept-url pattern="/user_right_delete"
			access="hasAnyRole('ROLE_SUPPRIMER_DROIT')" />
		<security:intercept-url pattern="/user_list"
			access="hasAnyRole('ROLE_AJOUTER_UTILISATEUR', 'ROLE_MODIFIER_UTILISATEUR', 'ROLE_SUPPRIMER_UTILISATEUR'))" />
		<security:intercept-url pattern="/user_details"
			access="hasAnyRole('ROLE_AJOUTER_UTILISATEUR', 'ROLE_MODIFIER_UTILISATEUR', 'ROLE_SUPPRIMER_UTILISATEUR'))" />
		<security:intercept-url pattern="/user_add"
			access="hasAnyRole('ROLE_AJOUTER_UTILISATEUR')" />
		<security:intercept-url pattern="/user_edit"
			access="hasAnyRole('ROLE_MODIFIER_UTILISATEUR')" />
		<security:intercept-url pattern="/user_delete"
			access="hasAnyRole('ROLE_SUPPRIMER_UTILISATEUR')" />

		<security:form-login login-page="/login"
			default-target-url="/home" authentication-failure-url="/login_failed" />
		<security:logout invalidate-session="true" logout-url="/logout"
			logout-success-url="/login" />
		<!-- You can specify the logout URL or if you don't it would be by default: 
			"/j_spring_security_logout" -->
	</security:http>


	<!-- A custom service where Spring will retrieve users and their corresponding 
		access levels -->
	<bean id="customUserDetailsService" class="org.intercom.springSecurity.CustomUserDetailsService" />

	<security:authentication-manager>
		<security:authentication-provider
			user-service-ref="customUserDetailsService">
			<!-- <security:password-encoder ref="passwordEncoder" /> -->
		</security:authentication-provider>
	</security:authentication-manager>

	<!-- Use a Md5 encoder since the user's passwords are stored as Md5 in the 
		database -->
	<!-- <bean -->
	<!-- class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" -->
	<!-- id="passwordEncoder" /> -->


</beans>