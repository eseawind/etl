<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
 http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

	<display-name>Intercom ETL Application</display-name>

	<!-- Spring MVC -->

	<!-- The Dispatcher Servlet -->
	<!-- The servlet declarations register the servlets with the web container -->
	<servlet>
		<servlet-name>spring</servlet-name>
		<!-- As the name of the servlet (<servlet-name>) is spring, Spring's Convention 
			over Configuration (CoC) rules will search for an XML configuration file 
			called spring-servlet.xml in WEB-INF -->
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<!-- The servlet mapping maps url patterns to servlets -->
	<servlet-mapping>
		<servlet-name>spring</servlet-name>
		<!-- this URL pattern means that this servlet is the default servlet of 
			the application It maps all the URLs under the application -->
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<!-- Here you can now add a reference to a new XML configuration file -->
		<param-value>
			/WEB-INF/spring-servlet.xml,
			/WEB-INF/spring-security.xml
		</param-value>
	</context-param>

	<session-config>
		<session-timeout>30</session-timeout>
	</session-config>

	<!-- Welcome Page -->
	<welcome-file-list>
		<welcome-file>/index.jsp</welcome-file>
	</welcome-file-list>

	<!-- Spring Security -->
	<listener>
	    <listener-class>
	        org.springframework.security.web.session.HttpSessionEventPublisher
	    </listener-class>
	</listener>
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- error page -->
	<error-page>
	<error-code>404</error-code>
	<location>/error.jsp</location>
  </error-page>
	 <error-page>
		<exception-type>java.lang.Exception</exception-type>
		<location>/error.jsp</location>
	 </error-page>
</web-app>